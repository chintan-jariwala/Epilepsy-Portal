{"version":3,"sources":["process-trial.js"],"names":["test","require","processTrial","t","data","activeCount","completedCount","recruitedCount","targetCount","result","processPercent","expectedResult","recruitedPercent","unrecruitedPercent","completedPercent","activePercent","deepEqual","description","IRBStart","IRBEnd","start","end"],"mappings":"AAAA;;;;AAEA,IAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,IAAMC,eAAeD,QAAQ,yBAAR,CAArB;;AAEAD,KAAK,mCAAL,EAA0C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAC7C,QAAMC,OAAO;AACTC,qBAAa,CADJ;AAETC,wBAAgB,CAFP;AAGTC,wBAAgB,CAHP;AAITC,qBAAa;AAJJ,KAAb;;AAOA,QAAMC,SAASP,aAAaQ,cAAb,CAA4BN,IAA5B,CAAf;;AAEA,QAAMO,iBAAiB;AACnBC,0BAAkB,EADC;AAEnBC,4BAAoB,EAFD;AAGnBC,0BAAkB,EAHC;AAInBC,uBAAe;AAJI,KAAvB;;AAOAZ,MAAEa,SAAF,uBACIP,MADJ;AAAA;AAAA;AAAA;AAAA,gCAEIE,cAFJ;AAAA;AAAA;AAAA;AAAA,QAGI,qGAHJ;AAKH,CAtBD;;AAwBAX,KAAK,sCAAL,EAA6C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAChD,QAAMC,OAAO;AACTC,qBAAa,CADJ;AAETC,wBAAgB,CAFP;AAGTC,wBAAgB,CAHP;AAITC,qBAAa;AAJJ,KAAb;;AAOA,QAAMC,SAASP,aAAaQ,cAAb,CAA4BN,IAA5B,CAAf;;AAEA,QAAMO,iBAAiB;AACnBC,0BAAkB,CADC;AAEnBC,4BAAoB,GAFD;AAGnBC,0BAAkB,CAHC;AAInBC,uBAAe;AAJI,KAAvB;;AAOAZ,MAAEa,SAAF,yBAAYP,MAAZ;AAAA;AAAA;AAAA;AAAA,gCAAoBE,cAApB;AAAA;AAAA;AAAA;AAAA,QAAoC,iDAApC;AACH,CAlBD;;AAoBAX,KAAK,yBAAL,EAAgC,UAACG,CAAD,EAAO;AAAA;AAAA;;AACnC,QAAMC,OAAO;AACTC,qBAAa,CADJ;AAETC,wBAAgB,CAFP;AAGTW,qBAAa,SAHJ;AAITC,kBAAU,YAJD;AAKTC,gBAAQ,YALC;AAMTZ,wBAAgB,CANP;AAOTC,qBAAa;AAPJ,KAAb;;AAUA,QAAMC,SAASP,aAAaE,IAAb,CAAf;;AAEA,QAAMO,iBAAiB;AACnB;AACAN,qBAAa,CAFM;AAGnBC,wBAAgB,CAHG;AAInBW,qBAAa,SAJM;AAKnBC,kBAAU,YALS;AAMnBC,gBAAQ,YANW;AAOnBZ,wBAAgB,CAPG;AAQnBC,qBAAa,CARM;AASnB;AACAY,eAAO,YAVY;AAWnBC,aAAK,YAXc;AAYnBT,0BAAkB,CAZC;AAanBC,4BAAoB,GAbD;AAcnBC,0BAAkB,CAdC;AAenBC,uBAAe;AAfI,KAAvB;;AAkBAZ,MAAEa,SAAF,yBACIP,MADJ;AAAA;AAAA;AAAA;AAAA,gCAEIE,cAFJ;AAAA;AAAA;AAAA;AAAA,QAGI,iFAHJ;AAKH,CApCD","file":"process-trial.js","sourcesContent":["'use strict';\n\nconst test = require('ava');\nconst processTrial = require('../helper/process-trial');\n\ntest('when there are recruited patients', (t) => {\n    const data = {\n        activeCount: 1,\n        completedCount: 1,\n        recruitedCount: 2,\n        targetCount: 4\n    };\n\n    const result = processTrial.processPercent(data);\n\n    const expectedResult = {\n        recruitedPercent: 50,\n        unrecruitedPercent: 50,\n        completedPercent: 50,\n        activePercent: 50\n    };\n\n    t.deepEqual(\n        result,\n        expectedResult,\n        'it should have half of the desired patients recruited, and half of the recruited patients completed'\n    );\n});\n\ntest('when there are no recruited patients', (t) => {\n    const data = {\n        activeCount: 0,\n        completedCount: 0,\n        recruitedCount: 0,\n        targetCount: 4\n    };\n\n    const result = processTrial.processPercent(data);\n\n    const expectedResult = {\n        recruitedPercent: 0,\n        unrecruitedPercent: 100,\n        completedPercent: 0,\n        activePercent: 0\n    };\n\n    t.deepEqual(result, expectedResult, 'it should have all unrecruited and nothing else');\n});\n\ntest('when trial is processed', (t) => {\n    const data = {\n        activeCount: 0,\n        completedCount: 0,\n        description: 'example',\n        IRBStart: '2000-01-01',\n        IRBEnd: '2001-01-01',\n        recruitedCount: 0,\n        targetCount: 4\n    };\n\n    const result = processTrial(data);\n\n    const expectedResult = {\n        // old keys\n        activeCount: 0,\n        completedCount: 0,\n        description: 'example',\n        IRBStart: '2000-01-01',\n        IRBEnd: '2001-01-01',\n        recruitedCount: 0,\n        targetCount: 4,\n        // new keys\n        start: '2000-01-01',\n        end: '2001-01-01',\n        recruitedPercent: 0,\n        unrecruitedPercent: 100,\n        completedPercent: 0,\n        activePercent: 0\n    };\n\n    t.deepEqual(\n        result,\n        expectedResult,\n        'it should format dates, add percentages, and pass through other keys unmodified'\n    );\n});\n"]}
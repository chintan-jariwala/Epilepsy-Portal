{"version":3,"sources":["process-patient-status.js"],"names":["test","require","processPatientStatus","t","data","expiredCount","result","expectedResult","status","deepEqual"],"mappings":"AAAA;;;;AAEA,IAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,IAAMC,uBAAuBD,QAAQ,kCAAR,CAA7B;;AAEAD,KAAK,qCAAL,EAA4C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAC/C,QAAMC,OAAO;AACTC,sBAAc;AADL,KAAb;;AAIA,QAAMC,SAASJ,qBAAqBE,IAArB,CAAf;;AAEA,QAAMG,iBAAiB;AACnBF,sBAAc,CADK;AAEnBG,gBAAQ;AAFW,KAAvB;;AAKAL,MAAEM,SAAF,uBAAYH,MAAZ;AAAA;AAAA;AAAA;AAAA,gCAAoBC,cAApB;AAAA;AAAA;AAAA;AAAA,QAAoC,4CAApC;AACH,CAbD;;AAeAP,KAAK,qCAAL,EAA4C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAC/C,QAAMC,OAAO;AACTC,sBAAc;AADL,KAAb;;AAIA,QAAMC,SAASJ,qBAAqBE,IAArB,CAAf;;AAEA,QAAMG,iBAAiB;AACnBF,sBAAc,CADK;AAEnBG,gBAAQ;AAFW,KAAvB;;AAKAL,MAAEM,SAAF,yBAAYH,MAAZ;AAAA;AAAA;AAAA;AAAA,gCAAoBC,cAApB;AAAA;AAAA;AAAA;AAAA,QAAoC,iDAApC;AACH,CAbD;;AAeAP,KAAK,sCAAL,EAA6C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAChD,QAAMC,OAAO;AACTC,sBAAc;AADL,KAAb;;AAIA,QAAMC,SAASJ,qBAAqBE,IAArB,CAAf;;AAEA,QAAMG,iBAAiB;AACnBF,sBAAc,CADK;AAEnBG,gBAAQ;AAFW,KAAvB;;AAKAL,MAAEM,SAAF,yBAAYH,MAAZ;AAAA;AAAA;AAAA;AAAA,gCAAoBC,cAApB;AAAA;AAAA;AAAA;AAAA,QAAoC,iDAApC;AACH,CAbD;;AAeAP,KAAK,wCAAL,EAA+C,UAACG,CAAD,EAAO;AAAA;AAAA;;AAClD,QAAMC,OAAO;AACTC,sBAAc;AADL,KAAb;;AAIA,QAAMC,SAASJ,qBAAqBE,IAArB,CAAf;;AAEA,QAAMG,iBAAiB;AACnBF,sBAAc,CADK;AAEnBG,gBAAQ;AAFW,KAAvB;;AAKAL,MAAEM,SAAF,yBAAYH,MAAZ;AAAA;AAAA;AAAA;AAAA,gCAAoBC,cAApB;AAAA;AAAA;AAAA;AAAA,QAAoC,gDAApC;AACH,CAbD","file":"process-patient-status.js","sourcesContent":["'use strict';\n\nconst test = require('ava');\nconst processPatientStatus = require('../helper/process-patient-status');\n\ntest('when patient has no expired surveys', (t) => {\n    const data = {\n        expiredCount: 0\n    };\n\n    const result = processPatientStatus(data);\n\n    const expectedResult = {\n        expiredCount: 0,\n        status: 'Compliant'\n    };\n\n    t.deepEqual(result, expectedResult, 'it should return row with compliant status');\n});\n\ntest('when patient has one expired survey', (t) => {\n    const data = {\n        expiredCount: 1\n    };\n\n    const result = processPatientStatus(data);\n\n    const expectedResult = {\n        expiredCount: 1,\n        status: 'Semi-Compliant'\n    };\n\n    t.deepEqual(result, expectedResult, 'it should return row with semi-compliant status');\n});\n\ntest('when patient has two expired surveys', (t) => {\n    const data = {\n        expiredCount: 2\n    };\n\n    const result = processPatientStatus(data);\n\n    const expectedResult = {\n        expiredCount: 2,\n        status: 'Semi-Compliant'\n    };\n\n    t.deepEqual(result, expectedResult, 'it should return row with semi-compliant status');\n});\n\ntest('when patient has three expired surveys', (t) => {\n    const data = {\n        expiredCount: 3\n    };\n\n    const result = processPatientStatus(data);\n\n    const expectedResult = {\n        expiredCount: 3,\n        status: 'Non-Compliant'\n    };\n\n    t.deepEqual(result, expectedResult, 'it should return row with non-compliant status');\n});\n"]}
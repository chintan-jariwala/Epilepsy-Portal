'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var test = require('ava');
var processTrial = require('../helper/process-trial');

test('when there are recruited patients', function (t) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    var data = {
        activeCount: 1,
        completedCount: 1,
        recruitedCount: 2,
        targetCount: 4
    };

    var result = processTrial.processPercent(data);

    var expectedResult = {
        recruitedPercent: 50,
        unrecruitedPercent: 50,
        completedPercent: 50,
        activePercent: 50
    };

    t.deepEqual(_rec._expr(_rec._capt(result, 'arguments/0'), {
        content: 't.deepEqual(result, expectedResult, \'it should have half of the desired patients recruited, and half of the recruited patients completed\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 23
    }), _rec2._expr(_rec2._capt(expectedResult, 'arguments/1'), {
        content: 't.deepEqual(result, expectedResult, \'it should have half of the desired patients recruited, and half of the recruited patients completed\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 23
    }), 'it should have half of the desired patients recruited, and half of the recruited patients completed');
});

test('when there are no recruited patients', function (t) {
    var _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder();

    var data = {
        activeCount: 0,
        completedCount: 0,
        recruitedCount: 0,
        targetCount: 4
    };

    var result = processTrial.processPercent(data);

    var expectedResult = {
        recruitedPercent: 0,
        unrecruitedPercent: 100,
        completedPercent: 0,
        activePercent: 0
    };

    t.deepEqual(_rec3._expr(_rec3._capt(result, 'arguments/0'), {
        content: 't.deepEqual(result, expectedResult, \'it should have all unrecruited and nothing else\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 47
    }), _rec4._expr(_rec4._capt(expectedResult, 'arguments/1'), {
        content: 't.deepEqual(result, expectedResult, \'it should have all unrecruited and nothing else\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 47
    }), 'it should have all unrecruited and nothing else');
});

test('when trial is processed', function (t) {
    var _rec5 = new _powerAssertRecorder(),
        _rec6 = new _powerAssertRecorder();

    var data = {
        activeCount: 0,
        completedCount: 0,
        description: 'example',
        IRBStart: '2000-01-01',
        IRBEnd: '2001-01-01',
        recruitedCount: 0,
        targetCount: 4
    };

    var result = processTrial(data);

    var expectedResult = {
        // old keys
        activeCount: 0,
        completedCount: 0,
        description: 'example',
        IRBStart: '2000-01-01',
        IRBEnd: '2001-01-01',
        recruitedCount: 0,
        targetCount: 4,
        // new keys
        start: '2000-01-01',
        end: '2001-01-01',
        recruitedPercent: 0,
        unrecruitedPercent: 100,
        completedPercent: 0,
        activePercent: 0
    };

    t.deepEqual(_rec5._expr(_rec5._capt(result, 'arguments/0'), {
        content: 't.deepEqual(result, expectedResult, \'it should format dates, add percentages, and pass through other keys unmodified\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 81
    }), _rec6._expr(_rec6._capt(expectedResult, 'arguments/1'), {
        content: 't.deepEqual(result, expectedResult, \'it should format dates, add percentages, and pass through other keys unmodified\')',
        filepath: 'controller/helper-test/process-trial.js',
        line: 81
    }), 'it should format dates, add percentages, and pass through other keys unmodified');
});
//# sourceMappingURL=../../node_modules/.cache/ava/d5897825e71d7673bc8051018b72a367.js.map